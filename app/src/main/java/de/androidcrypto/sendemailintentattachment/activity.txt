package de.androidcrypto.sendemailintentattachment;

import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.nio.charset.StandardCharsets;

import static androidx.core.content.FileProvider.getUriForFile;

public class MainActivity extends AppCompatActivity {

    Button btnSendEmail;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        btnSendEmail = (Button) findViewById(R.id.btnSendEmail);
        btnSendEmail.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // save some data to file in internal storage
                byte[] data = "some data".getBytes(StandardCharsets.UTF_8);
                String filename = "test.txt";
                boolean writeSuccess = writeFileToInternalStorage(filename, data);
                System.out.println("writeSuccess: " + writeSuccess);
                if (writeSuccess) {
                    File fullFile = new File(getFilesDir(), filename);
                    Context context = getApplicationContext();
                    Uri contentUri = getUriForFile(context, "de.androidcrypto.sendemailintentattachment.fileprovider", fullFile);
                    System.out.println("contentUri: " + contentUri);

                    // build the emailIntent
                    try {
                        //String email = "test@test.com"; // change to a real email address you control
                        String email = "androidcrypto@gmx.de";
                        String subject = "email subject";
                        String message = "email message";
                        final Intent emailIntent = new Intent(android.content.Intent.ACTION_SEND);
                        emailIntent.setType("plain/text");
                        emailIntent.putExtra(android.content.Intent.EXTRA_EMAIL, new String[]{email});
                        emailIntent.putExtra(android.content.Intent.EXTRA_SUBJECT, subject);
                        emailIntent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
                        if (contentUri != null) {
                            System.out.println("contentUri is not null");
                            emailIntent.putExtra(Intent.EXTRA_STREAM, contentUri);
                        }
                        emailIntent.putExtra(android.content.Intent.EXTRA_TEXT, message);
                        System.out.println("before MainActivity.this.startActivity");
                        MainActivity.this.startActivity(Intent.createChooser(emailIntent, "Sending email..."));
                        System.out.println("after MainActivity.this.startActivity");
                    } catch (SecurityException e) {
                        System.out.println("error: " + e.toString());
                        Toast.makeText(MainActivity.this, "Request failed try again: " + e.toString(), Toast.LENGTH_LONG).show();
                    }
                }
            }
        });
    }

    private boolean writeFileToInternalStorage(String filename, byte[] data) {
        try {
            FileOutputStream output = openFileOutput(filename, MODE_PRIVATE);
            ByteArrayInputStream input = new ByteArrayInputStream(data);
            int DEFAULT_BUFFER_SIZE = 1024;
            byte[] buffer = new byte[DEFAULT_BUFFER_SIZE];
            int n = 0;
            n = input.read(buffer, 0, DEFAULT_BUFFER_SIZE);
            while (n >= 0) {
                output.write(buffer, 0, n);
                n = input.read(buffer, 0, DEFAULT_BUFFER_SIZE);
            }
            output.close();
            input.close();
            return true;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
}
